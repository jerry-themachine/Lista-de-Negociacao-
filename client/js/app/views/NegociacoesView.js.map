{"version":3,"sources":["../../app-es6/views/NegociacoesView.js"],"names":["NegociacoesView","elemento","model","negociacoes","map","n","textToUper","banco","charAt","toUpperCase","slice","i","length","textConvert","textBegin","textEndSpace","textToUper1","pais","DateHelper","dataParaTexto","data","variacao","bolsa","codigo","retorno","cota","valor","total","toFixed","join","volumeTotal","View"],"mappings":";;;;;;;;;;IAAMA,e;;;AAEF,6BAAYC,QAAZ,EAAsB;AAAA;;AAAA,iIAEZA,QAFY;AAGrB;;;;iCAEQC,K,EAAO;;AAEZ,unDAqBUA,MAAMC,WAAN,CAAkBC,GAAlB,CAAsB,UAACC,CAAD,EAAO;;AAE/C;AACoB,4FAIa,YAAY;;AAET;AACD,wBAAIC,aAAaD,EAAEE,KAAF,CAAQC,MAAR,CAAe,CAAf,EAAkBC,WAAlB,KAAkCJ,EAAEE,KAAF,CAAQG,KAAR,CAAc,CAAd,CAAnD;;AAEC,yBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIL,WAAWM,MAA/B,EAAuCD,GAAvC,EAA4C;AACxC,4BAAIL,WAAWE,MAAX,CAAkBG,CAAlB,MAAyB,GAA7B,EAAkC;;AAE9B;AACA,gCAAIE,cAAcP,WAAWE,MAAX,CAAkBG,IAAE,CAApB,EAAuBF,WAAvB,EAAlB;;AAEA;AACA,gCAAIK,YAAYR,WAAWI,KAAX,CAAiB,CAAjB,EAAqBC,IAAE,CAAvB,CAAhB;;AAEA;AACA,gCAAII,eAAeT,WAAWI,KAAX,CAAiBC,IAAI,CAArB,CAAnB;;AAEA;AACAL,yCAAaQ,YAAYD,WAAZ,GAA0BE,YAAvC;AAEH;AACJ;AACD,2BAAOT,UAAP;AACH,iBAvBD,EAJZ,+CAgCa,YAAY;;AAET;AACD,wBAAIU,cAAcX,EAAEY,IAAF,CAAOT,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCJ,EAAEY,IAAF,CAAOP,KAAP,CAAa,CAAb,CAAnD;;AAEC,yBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIK,YAAYJ,MAAhC,EAAwCD,GAAxC,EAA6C;AACzC,4BAAIK,YAAYR,MAAZ,CAAmBG,CAAnB,MAA0B,GAA9B,EAAmC;;AAE/B;AACA,gCAAIE,cAAcG,YAAYR,MAAZ,CAAmBG,IAAE,CAArB,EAAwBF,WAAxB,EAAlB;;AAEA;AACA,gCAAIK,YAAYE,YAAYN,KAAZ,CAAkB,CAAlB,EAAsBC,IAAE,CAAxB,CAAhB;;AAEA;AACA,gCAAII,eAAeC,YAAYN,KAAZ,CAAkBC,IAAI,CAAtB,CAAnB;;AAEA;AACAK,0CAAcF,YAAYD,WAAZ,GAA0BE,YAAxC;AAEH;AACJ;AACD,2BAAOC,WAAP;AACH,iBAvBD,EAhCZ,4EA0DyCE,WAAWC,aAAX,CAAyBd,EAAEe,IAA3B,CA1DzC,+CA2Dcf,EAAEgB,QA3DhB,4EA4DyChB,EAAEiB,KAAF,CAAQb,WAAR,EA5DzC,4EA6DyCJ,EAAEkB,MAAF,CAASd,WAAT,EA7DzC,4EA8DyCJ,EAAEmB,OA9D3C,4EA+DyCnB,EAAEoB,IA/D3C,mDAgEkBpB,EAAEqB,KAhEpB,mDAiEkBrB,EAAEsB,KAAF,CAAQC,OAAR,CAAgB,CAAhB,CAjElB;AAoEpB;AACiB,aAxEC,EAwECC,IAxED,CAwEM,EAxEN,CArBV,gIAiGc3B,MAAM4B,WAjGpB;AAqGH;;;;EA9GyBC,I","file":"NegociacoesView.js","sourcesContent":["class NegociacoesView extends View {\n\n    constructor(elemento) {\n        \n        super(elemento);\n    }\n\n    template(model) {\n        \n        return `\n        <table class=\"table table-hover table-bordered\">\n            <thead>\n                <tr>\n                    <th style=\"text-align: center; vertical-align:middle\">BANCO - RAZÃO SOCIAL</th>\n                    <th style=\"text-align: center; vertical-align:middle\">PAÍS</th>\n                    <th style=\"text-align: center; vertical-align:middle; cursor: pointer\" onclick=\"negociacaoController.ordena('data')\"; cursor: \"pointer\">DATA<br>COMPRA</th>\n\n                    <th style=\"text-align: center; vertical-align:middle; cursor: pointer\" onclick=\"negociacaoController.ordena('variacao')\">VARIAÇÂO<br>(%)</th>\n                    <th style=\"text-align: center; vertical-align:middle\">BOLSA</th> \n                    <th style=\"text-align: center; vertical-align:middle\">CÒDIGO</th>   \n                                    \n                    <th style=\"text-align: center; vertical-align:middle; cursor: pointer\" onclick=\"negociacaoController.ordena('retorno')\">RETORNO<br>30 DIAS</th>\n                    <th style=\"text-align: center; vertical-align:middle; cursor: pointer\" onclick=\"negociacaoController.ordena('cota')\">COTA</th>\n                    <th style=\"text-align: center; vertical-align:middle; cursor: pointer\" onclick=\"negociacaoController.ordena('valor')\">VALOR <br> UNIT.</th>\n                    <th style=\"text-align: center; vertical-align:middle; cursor: pointer\" onclick=\"negociacaoController.ordena('total')\">TOTAL <br> COMPRA</th>\n                </tr>\n            </thead>\n            \n            <tbody>\n\n                ${model.negociacoes.map((n) => {\n\n//Criando uma nova lista para que cada negociação criada, seja criado também uma \"tr\" com os dados da negociação percorrida pelo \"map\"\n                    return `\n                        <tr>\n                            <td>${\n\n                                (function () {\n\n                                    //Convertendo primeiro caractére em maiúsculo\n                                   let textToUper = n.banco.charAt(0).toUpperCase() + n.banco.slice(1);\n                                                                   \n                                    for (let i = 0; i < textToUper.length; i++) {\n                                        if (textToUper.charAt(i) === \" \") {\n                                \n                                            //Convertendo caractére após o espaço em maiúsculo\n                                            let textConvert = textToUper.charAt(i+1).toUpperCase();\n                                \n                                            //Inserindo texto antes do espaço na variável\n                                            let textBegin = textToUper.slice(0, (i+1));\n                                \n                                            //Inserindo texto depois do espaço na variável\n                                            let textEndSpace = textToUper.slice(i + 2);\n                                \n                                            //Concatenando todas as strings em apenas uma \n                                            textToUper = textBegin + textConvert + textEndSpace;\n                                \n                                        } \n                                    }\n                                    return textToUper;\n                                })()                             \n                                                                                   \n                            }</td>\n                            <td>${\n                                \n                                (function () {\n\n                                    //Convertendo primeiro caractére em maiúsculo\n                                   let textToUper1 = n.pais.charAt(0).toUpperCase() + n.pais.slice(1);\n                                                                   \n                                    for (let i = 0; i < textToUper1.length; i++) {\n                                        if (textToUper1.charAt(i) === \" \") {\n                                \n                                            //Convertendo caractére após o espaço em maiúsculo\n                                            let textConvert = textToUper1.charAt(i+1).toUpperCase();\n                                \n                                            //Inserindo texto antes do espaço na variável\n                                            let textBegin = textToUper1.slice(0, (i+1));\n                                \n                                            //Inserindo texto depois do espaço na variável\n                                            let textEndSpace = textToUper1.slice(i + 2);\n                                \n                                            //Concatenando todas as strings em apenas uma \n                                            textToUper1 = textBegin + textConvert + textEndSpace;\n                                \n                                        } \n                                    }\n                                    return textToUper1;\n                                })()                             \n                                \n                            }</td>\n                            <td style=\"font-weight: bold \">${DateHelper.dataParaTexto(n.data)}</td>\n                            <td>${n.variacao}</td>\n                            <td style=\"text-align: center\">${n.bolsa.toUpperCase()}</td>\n                            <td style=\"text-align: center\">${n.codigo.toUpperCase()}</td>\n                            <td style=\"text-align: center\">${n.retorno}</td>\n                            <td style=\"text-align: center\">${n.cota}</td>\n                            <td>US$ ${n.valor}</td>\n                            <td>US$ ${n.total.toFixed(3)}</td>\n                        </tr>\n                    `\n//Transformando o array que contém strings em uma string gigante para ser inserido na interpolação do conteúdo do \"tbody\"\n                }).join('')}\n            </tbody>\n            <tfoot>\n            <th colspan=\"9\">TOTAL INVESTIMENTO</th>\n            <td>US$ ${model.volumeTotal}</td>\n            </tfoot>\n        </table>\n        `;\n    }\n}\n\n"]}