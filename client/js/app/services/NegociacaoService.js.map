{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","resolve","reject","atual","get","then","negociacoes","map","Negociacao","objeto","banco","pais","Date","data","variacao","bolsa","codigo","retorno","cota","valor","catch","erro","console","log","anterior","retrasada"],"mappings":";;;;;;IAEMA,iB;AAEF,iCAAc;AAAA;;AAEV,aAAKC,KAAL,GAAa,IAAIC,WAAJ,EAAb;AACH;;AAED;;;;;wDACgC;AAAA;;AAE5B,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,QAAQ,oBAAZ;AACA,sBAAKL,KAAL,CACCM,GADD,CACKD,KADL,EAECE,IAFD,CAEM,UAACC,WAAD,EAAiB;;AAEnBL,4BAAQK,YACPC,GADO,CACH;AAAA,+BAAU,IAAIC,UAAJ,CAAeC,OAAOC,KAAtB,EAA6BD,OAAOE,IAApC,EAA0C,IAAIC,IAAJ,CAASH,OAAOI,IAAhB,CAA1C,EAAiEJ,OAAOK,QAAxE,EAAkFL,OAAOM,KAAzF,EAAgGN,OAAOO,MAAvG,EAA+GP,OAAOQ,OAAtH,EAA+HR,OAAOS,IAAtI,EAA4IT,OAAOU,KAAnJ,CAAV;AAAA,qBADG,CAAR;AAEH,iBAND,EAOKC,KAPL,CAOW,UAACC,IAAD,EAAU;AACbC,4BAAQC,GAAR,CAAYF,IAAZ;AACAnB,2BAAO,uDAAP;AACH,iBAVL;;AAaAoB,wBAAQC,GAAR,CAAY,mDAAZ;AAEH,aAlBM,CAAP;AAoBH;;;;;AAGD;2DACmC;AAAA;;AAE/B,mBAAO,IAAIvB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAIpC,oBAAIsB,WAAW,sBAAf;AACA,uBAAK1B,KAAL,CACCM,GADD,CACKoB,QADL,EAECnB,IAFD,CAEM,UAACC,WAAD,EAAiB;;AAEnBL,4BAAQK,YACPC,GADO,CACH;AAAA,+BAAU,IAAIC,UAAJ,CAAeC,OAAOC,KAAtB,EAA6BD,OAAOE,IAApC,EAA0C,IAAIC,IAAJ,CAASH,OAAOI,IAAhB,CAA1C,EAAiEJ,OAAOK,QAAxE,EAAkFL,OAAOM,KAAzF,EAAgGN,OAAOO,MAAvG,EAA+GP,OAAOQ,OAAtH,EAA+HR,OAAOS,IAAtI,EAA4IT,OAAOU,KAAnJ,CAAV;AAAA,qBADG,CAAR;AAEH,iBAND,EAOKC,KAPL,CAOW,UAACC,IAAD,EAAU;AACbC,4BAAQC,GAAR,CAAYF,IAAZ;AACAnB,2BAAO,0DAAP;AACH,iBAVL;;AAaAoB,wBAAQC,GAAR,CAAY,sDAAZ;AAGH,aArBM,CAAP;AAsBH;;;;;AAGD;4DACoC;AAAA;;AAEhC,mBAAO,IAAIvB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIuB,YAAY,uBAAhB;AACA,uBAAK3B,KAAL,CACCM,GADD,CACKqB,SADL,EAECpB,IAFD,CAEM,UAACC,WAAD,EAAiB;;AAEnBL,4BAAQK,YACPC,GADO,CACH;AAAA,+BAAU,IAAIC,UAAJ,CAAeC,OAAOC,KAAtB,EAA6BD,OAAOE,IAApC,EAA0C,IAAIC,IAAJ,CAASH,OAAOI,IAAhB,CAA1C,EAAiEJ,OAAOK,QAAxE,EAAkFL,OAAOM,KAAzF,EAAgGN,OAAOO,MAAvG,EAA+GP,OAAOQ,OAAtH,EAA+HR,OAAOS,IAAtI,EAA4IT,OAAOU,KAAnJ,CAAV;AAAA,qBADG,CAAR;AAEH,iBAND,EAOKC,KAPL,CAOW,UAACC,IAAD,EAAU;AACbC,4BAAQC,GAAR,CAAYF,IAAZ;AACAnB,2BAAO,0DAAP;AACH,iBAVL;;AAaAoB,wBAAQC,GAAR,CAAY,6CAAZ;AAEH,aAlBM,CAAP;AAmBH;;;;;;AACJ","file":"NegociacaoService.js","sourcesContent":["\n\nclass NegociacaoService {\n\n    constructor() {\n\n        this._http = new HttpService();\n    }\n\n    //Negociações da semana\n    obterNegociacoesDaSemanaAtual() {\n\n        return new Promise((resolve, reject) => {\n\n            let atual = 'negociacoes/semana';   \n            this._http\n            .get(atual)\n            .then((negociacoes) => {\n\n                resolve(negociacoes\n                .map(objeto => new Negociacao(objeto.banco, objeto.pais, new Date(objeto.data), objeto.variacao, objeto.bolsa, objeto.codigo, objeto.retorno, objeto.cota, objeto.valor)))\n            })\n                .catch((erro) => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana atual');\n                });   \n            \n                     \n            console.log('Negociações da semana atual inseridas com sucesso');  \n                    \n        });\n\n    };\n    \n\n    //Negociações da semana anterior\n    obterNegociacoesDaSemanaAnterior() {\n\n        return new Promise((resolve, reject) => {\n\n    \n\n            let anterior = 'negociacoes/anterior';\n            this._http\n            .get(anterior)\n            .then((negociacoes) => {\n\n                resolve(negociacoes\n                .map(objeto => new Negociacao(objeto.banco, objeto.pais, new Date(objeto.data), objeto.variacao, objeto.bolsa, objeto.codigo, objeto.retorno, objeto.cota, objeto.valor)))\n            })\n                .catch((erro) => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana anterior');\n                });   \n            \n                    \n            console.log('Negociações da semana anterior inseridas com sucesso');  \n                      \n          \n        });\n    };\n\n\n    //Negociações da semana retrasada\n    obterNegociacoesDaSemanaRetrasada() {\n\n        return new Promise((resolve, reject) => {\n            \n            let retrasada = 'negociacoes/retrasada';\n            this._http\n            .get(retrasada)\n            .then((negociacoes) => {\n\n                resolve(negociacoes\n                .map(objeto => new Negociacao(objeto.banco, objeto.pais, new Date(objeto.data), objeto.variacao, objeto.bolsa, objeto.codigo, objeto.retorno, objeto.cota, objeto.valor)))\n            })\n                .catch((erro) => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana anterior');\n                });   \n            \n                  \n            console.log('Negociações da semana inseridas com sucesso');  \n           \n        });\n    };\n};\n\n"]}